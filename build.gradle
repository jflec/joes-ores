plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.170'
}

tasks.named('wrapper', Wrapper).configure {
    distributionType = Wrapper.DistributionType.BIN
}

version = mod_version
group   = mod_group_id

repositories {
    mavenLocal()
}

base {
    archivesName.set(modid)
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

configurations {
    localRuntime
    runtimeClasspath {
        extendsFrom(localRuntime)
    }
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"
}

sourceSets {
    main {
        resources {
            srcDir 'src/generated/resources'
        }
    }
}

runs {
    configureEach {
        systemProperty 'forge.logging.markers',        'REGISTRIES'
        systemProperty 'forge.logging.console.level',  'debug'
        modSource project.sourceSets.main
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', project.modid
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', project.modid
        argument '--nogui'
    }

    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', project.modid
    }

    data {
        arguments.addAll(
                '--mod',      project.modid,
                '--all',
                '--output',   file('src/generated/resources/').absolutePath,
                '--existing', file('src/main/resources/').absolutePath
        )
    }
}

tasks.withType(ProcessResources).configureEach {
    def replaceProperties = [
            minecraft_version       : minecraft_version,
            minecraft_version_range : minecraft_version_range,
            neo_version             : neo_version,
            neo_version_range       : neo_version_range,
            loader_version_range    : loader_version_range,
            modid                   : modid,
            mod_name                : mod_name,
            mod_license             : mod_license,
            mod_version             : mod_version,
            mod_authors             : mod_authors,
            mod_description         : mod_description
    ]
    inputs.properties replaceProperties

    filesMatching('META-INF/neoforge.mods.toml') {
        expand(replaceProperties)
    }
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url = "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
